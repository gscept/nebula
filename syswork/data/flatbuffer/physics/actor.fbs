//------------------------------------------------------------------------------
//
//    Physics types for flatbuffer
//
//    (C) 2020 Individual contributors, see AUTHORS file

include "foundation/math.fbs";
include "physics/material.fbs";
include "physics/constraints.fbs";

namespace PhysicsResource;

table MeshCollider
{
    prim_group : ushort;
    type : Physics.MeshTopology;
    file : string;
}

table SphereCollider
{
    radius : float;
}

table CapsuleCollider
{
    radius : float;
    halfheight: float;
}

// fugly workaround for unions not being able contain structs
struct Box
{
     extents : Flat.Vec3 (native_inline);
}

table BoxCollider
{
     extents : Flat.Vec3 (native_inline);
}

table HeightFieldCollider
{
    height_range : float;
    target_size_x : float;
    target_size_y : float;
    file : string;
}

union ColliderData
{
    BoxCollider, SphereCollider, CapsuleCollider, MeshCollider, HeightFieldCollider
}

table Collider
{
    name : string;
    type : Physics.ColliderType;
    data : ColliderData;
}

table Shape
{
    collider : Collider;
    material : string;
    transform : Flat.Transform (native_inline);
}

table Body
{
    feedback : Physics.CollisionFeedback = Full;
    collision : string;
    shapes : [Shape];
}

table BodySetup
{
    body : Body;
    transform : Flat.Transform (native_inline);
    name : string;
}

table Aggregate
{
    bodies : [BodySetup];
    constraints : [Physics.Joint];
}

union PhysicsResourceUnion
{
    BodySetup, Aggregate
}

table Actor
{
    data : PhysicsResourceUnion;
}

root_type Actor;
file_identifier "ACTO";
file_extension "actor";