//------------------------------------------------------------------------------
//  techniques.gpuh
//  (C) 2024 Individual contributors, see AUTHORS file
//------------------------------------------------------------------------------

#ifndef TECHNIQUES_GPUH
#define TECHNIQUES_GPUH

//------------------------------------------------------------------------------
// Define some macros which helps with declaring techniques
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
/**
	Most common, simple vertex-pixel shader technique
*/

#define PostEffect(vertexShader, pixelShader, renderState) \
@Mask("Alt0") \
program Main \
{ \
	VertexShader = vertexShader; \
	PixelShader = pixelShader; \
	RenderState = renderState; \
}

#define Compute(computeShader) \
@Mask("Alt0") \
program Main\
{ \
	ComputeShader = computeShader; \
}

#define SimpleTechnique(name, features, vertexShader, pixelShader, renderState) \
@Mask(features) \
program name\
{ \
	VertexShader = vertexShader; \
	PixelShader = pixelShader; \
	RenderState = renderState; \
} 

#define GeometryTechnique(name, features, vertexShader, geometryShader, pixelShader, renderState) \
@Mask(features) \
program name \
{ \
	VertexShader = vertexShader; \
	PixelShader = pixelShader; \
	GeometryShader = geometryShader; \
	RenderState = renderState; \
} 


#define TessellationTechnique(name, features, vertexShader, hullShader, domainShader, pixelShader, renderState) \
@Mask(features) \
program name \
{ \
	VertexShader = vertexShader; \
	PixelShader = pixelShader; \
	HullShader = hullShader; \
	DomainShader = domainShader; \
	RenderState = renderState; \
} 


#define FullTechnique(name, features, vertexShader, hullShader, domainShader, geometryShader, pixelShader, renderState) \
@Mask(features) \
program name \
{ \
	VertexShader = vertexShader; \
	PixelShader = pixelShader; \
	GeometryShader = geometryShader; \
	HullShader = hullShader; \
	DomainShader = domainShader; \
	RenderState = renderState; \
} 

#define TransformFeedbackTechnique(name, features, vertexShader) \
@Mask(features) \
program name \
{ \
	VertexShader = vertexShader; \
}

#define StateLessTechnique(name, features, vertexShader, pixelShader) \
@Mask(features) \
program name \
{ \
	VertexShader = vertexShader; \
	PixelShader = pixelShader; \
}

#endif // TECHNIQUES_GPUH